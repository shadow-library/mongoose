name: Publish package to NPM

on:
  workflow_dispatch:
    inputs:
      bump:
        type: choice
        description: 'Bump version'
        default: 'patch'
        options:
          - 'patch'
          - 'minor'
          - 'major'
          - 'premajor'
          - 'preminor'
          - 'prepatch'

jobs:
  publish:
    if: github.actor == 'leanderpaul' && github.triggering_actor == 'leanderpaul' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.SHADOW_MANAGER_APP_ID }}
          private-key: ${{ secrets.SHADOW_MANAGER_PRIVATE_KEY }}

      - name: Set Git user config
        run: |
          git config user.name "$APP_SLUG[bot]"
          git config user.email "$INSTALLATION_ID+$APP_SLUG[bot]@users.noreply.github.com"
        env:
          APP_SLUG: ${{ steps.app-token.outputs.app-slug }}
          INSTALLATION_ID: ${{ steps.app-token.outputs.installation-id }}

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Bump version
        run: bunx release-it ${{ github.event.inputs.bump }} ${{ startsWith(github.event.inputs.bump, 'pre') && '--preRelease=beta' || '' }} --ci
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push changes
        run: |
          gh api --method PUT /repos/${{ github.repository }}/contents/package.json \
            --field branch="main" \
            --field encoding="base64"  \
            --field content="$(base64 -i package.json)" \
            --field message="$(git show -s --format=%s)" \
            --field sha="$(git rev-parse HEAD~1:package.json)"
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
